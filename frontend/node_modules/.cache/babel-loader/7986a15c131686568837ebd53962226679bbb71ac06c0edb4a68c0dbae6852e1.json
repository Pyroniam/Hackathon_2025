{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pyron\\\\CSE\\\\Hackathon_2025_Finance\\\\Test\\\\frontend\\\\src\\\\components\\\\PlaidIntegration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaidIntegration = ({\n  setAccessToken\n}) => {\n  _s();\n  const [linkToken, setLinkToken] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch link token from backend\n  useEffect(() => {\n    const fetchLinkToken = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\n        setLinkToken(response.data.link_token);\n      } catch (error) {\n        console.error(\"Error creating link token:\", error);\n      }\n    };\n    fetchLinkToken();\n  }, []);\n\n  // Initialize Plaid Link\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: async publicToken => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", {\n          public_token: publicToken\n        });\n        setAccessToken(response.data.access_token);\n        fetchBankData(); // Fetch transactions after authentication\n      } catch (error) {\n        console.error(\"Error exchanging token:\", error);\n      }\n    }\n  });\n\n  // Fetch transactions from backend\n  const fetchBankData = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/accounts\");\n      setTransactions(response.data.transactions);\n    } catch (error) {\n      console.error(\"Error fetching financial data:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Group transactions by month\n  const groupTransactionsByMonth = () => {\n    const grouped = {};\n    transactions.forEach(transaction => {\n      const month = new Date(transaction.date).toLocaleString(\"default\", {\n        month: \"long\",\n        year: \"numeric\"\n      });\n      if (!grouped[month]) {\n        grouped[month] = [];\n      }\n      grouped[month].push(transaction);\n    });\n    return grouped;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"900px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: \"10px 15px\",\n        backgroundColor: \"#1976D2\",\n        color: \"white\",\n        border: \"none\",\n        cursor: \"pointer\",\n        borderRadius: \"5px\"\n      },\n      onClick: open,\n      disabled: !ready,\n      children: \"Connect Bank Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        marginTop: \"20px\",\n        color: \"#aaa\"\n      },\n      children: \"Loading transactions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), !loading && transactions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: Object.entries(groupTransactionsByMonth()).map(([month, trans], index) => /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          marginBottom: \"20px\",\n          backgroundColor: \"#333\",\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            padding: \"10px\",\n            backgroundColor: \"#444\",\n            color: \"white\"\n          },\n          children: [month, \" - $\", trans.reduce((sum, t) => sum + t.amount, 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                backgroundColor: \"#555\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: \"Bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: trans.map((t, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              style: idx % 2 === 0 ? {\n                backgroundColor: \"#444\"\n              } : {},\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: t.bank_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: t.merchant_name || \"Unknown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: [\"$\", t.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"white\"\n                },\n                children: new Date(t.date).getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaidIntegration, \"XQ/UvjB9E12COuFOMn9eM3oPeho=\", false, function () {\n  return [usePlaidLink];\n});\n_c = PlaidIntegration;\nexport default PlaidIntegration;\nvar _c;\n$RefreshReg$(_c, \"PlaidIntegration\");","map":{"version":3,"names":["React","useState","useEffect","usePlaidLink","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","jsxDEV","_jsxDEV","PlaidIntegration","setAccessToken","_s","linkToken","setLinkToken","transactions","setTransactions","loading","setLoading","fetchLinkToken","response","post","data","link_token","error","console","open","ready","token","onSuccess","publicToken","public_token","access_token","fetchBankData","get","groupTransactionsByMonth","grouped","forEach","transaction","month","Date","date","toLocaleString","year","push","style","padding","maxWidth","margin","children","backgroundColor","color","border","cursor","borderRadius","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","variant","marginTop","length","Object","entries","map","trans","index","component","marginBottom","reduce","sum","t","amount","toFixed","idx","bank_name","merchant_name","getDate","_c","$RefreshReg$"],"sources":["C:/Users/Pyron/CSE/Hackathon_2025_Finance/Test/frontend/src/components/PlaidIntegration.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { usePlaidLink } from \"react-plaid-link\";\r\nimport axios from \"axios\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\r\n\r\nconst PlaidIntegration = ({ setAccessToken }) => {\r\n  const [linkToken, setLinkToken] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch link token from backend\r\n  useEffect(() => {\r\n    const fetchLinkToken = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\r\n        setLinkToken(response.data.link_token);\r\n      } catch (error) {\r\n        console.error(\"Error creating link token:\", error);\r\n      }\r\n    };\r\n    fetchLinkToken();\r\n  }, []);\r\n\r\n  // Initialize Plaid Link\r\n  const { open, ready } = usePlaidLink({\r\n    token: linkToken,\r\n    onSuccess: async (publicToken) => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", { public_token: publicToken });\r\n        setAccessToken(response.data.access_token);\r\n        fetchBankData(); // Fetch transactions after authentication\r\n      } catch (error) {\r\n        console.error(\"Error exchanging token:\", error);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Fetch transactions from backend\r\n  const fetchBankData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/accounts\");\r\n      setTransactions(response.data.transactions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching financial data:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Group transactions by month\r\n  const groupTransactionsByMonth = () => {\r\n    const grouped = {};\r\n    transactions.forEach((transaction) => {\r\n      const month = new Date(transaction.date).toLocaleString(\"default\", { month: \"long\", year: \"numeric\" });\r\n      if (!grouped[month]) {\r\n        grouped[month] = [];\r\n      }\r\n      grouped[month].push(transaction);\r\n    });\r\n    return grouped;\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"900px\", margin: \"auto\" }}>\r\n      <button\r\n        style={{ padding: \"10px 15px\", backgroundColor: \"#1976D2\", color: \"white\", border: \"none\", cursor: \"pointer\", borderRadius: \"5px\" }}\r\n        onClick={open}\r\n        disabled={!ready}\r\n      >\r\n        Connect Bank Account\r\n      </button>\r\n\r\n      {loading && <Typography variant=\"h6\" style={{ marginTop: \"20px\", color: \"#aaa\" }}>Loading transactions...</Typography>}\r\n\r\n      {!loading && transactions.length > 0 && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          {Object.entries(groupTransactionsByMonth()).map(([month, trans], index) => (\r\n            <TableContainer component={Paper} key={index} style={{ marginBottom: \"20px\", backgroundColor: \"#333\", color: \"white\" }}>\r\n              <Typography variant=\"h6\" style={{ padding: \"10px\", backgroundColor: \"#444\", color: \"white\" }}>\r\n                {month} - ${trans.reduce((sum, t) => sum + t.amount, 0).toFixed(2)}\r\n              </Typography>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow style={{ backgroundColor: \"#555\" }}>\r\n                    <TableCell style={{ color: \"white\" }}>Bank</TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>Name</TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>Price</TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>Date</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {trans.map((t, idx) => (\r\n                    <TableRow key={idx} style={idx % 2 === 0 ? { backgroundColor: \"#444\" } : {}}>\r\n                      <TableCell style={{ color: \"white\" }}>{t.bank_name}</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>{t.merchant_name || \"Unknown\"}</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>${t.amount.toFixed(2)}</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>{new Date(t.date).getDate()}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaidIntegration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}