{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pyron\\\\CSE\\\\Hackathon_2025_Finance\\\\Test\\\\frontend\\\\src\\\\components\\\\PlaidIntegration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport axios from \"axios\";\nimport { Button, CircularProgress, Container, Card, CardContent, Typography, List, ListItem, ListItemText, Accordion, AccordionSummary, AccordionDetails, ExpandMoreIcon } from \"@mui/material\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaidIntegration = () => {\n  _s();\n  const [linkToken, setLinkToken] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [income, setIncome] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch link token from backend\n  useEffect(() => {\n    const fetchLinkToken = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\n        setLinkToken(response.data.link_token);\n      } catch (error) {\n        console.error(\"Error creating link token:\", error);\n      }\n    };\n    fetchLinkToken();\n  }, []);\n\n  // Initialize Plaid Link\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: async publicToken => {\n      try {\n        setLoading(true);\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", {\n          public_token: publicToken\n        });\n        setAccessToken(response.data.access_token);\n        fetchBankData(response.data.access_token);\n      } catch (error) {\n        console.error(\"Error exchanging token:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n\n  // Fetch accounts, transactions, and income data\n  const fetchBankData = async token => {\n    try {\n      setLoading(true);\n\n      // Fetch Accounts\n      const accountResponse = await axios.post(\"http://localhost:5000/api/accounts\", {\n        access_token: token\n      });\n      setAccounts(accountResponse.data.accounts || []);\n\n      // Fetch Transactions\n      const transactionResponse = await axios.post(\"http://localhost:5000/api/transactions\", {\n        access_token: token\n      });\n      setTransactions(transactionResponse.data.transactions || []);\n\n      // Fetch Income\n      const incomeResponse = await axios.post(\"http://localhost:5000/api/income\", {\n        access_token: token\n      });\n      setIncome(incomeResponse.data.income || []);\n    } catch (error) {\n      console.error(\"❌ Error fetching financial data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Group transactions by month\n  const transactionsByMonth = transactions.reduce((acc, transaction) => {\n    const month = moment(transaction.date).format(\"MMMM YYYY\"); // Example: \"March 2025\"\n    if (!acc[month]) acc[month] = [];\n    acc[month].push(transaction);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Finance Advisor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: open,\n      disabled: !ready || !linkToken,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Connect Bank Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"20px\",\n        padding: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Bank Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: accounts.map(account => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: account.name,\n              secondary: `Balance: $${account.balances.current}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, account.account_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), income.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"20px\",\n        padding: \"20px\",\n        backgroundColor: \"#e8f5e9\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            fontWeight: \"bold\",\n            color: \"#2E7D32\"\n          },\n          children: \"Estimated Monthly Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: income.map((incomeSource, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: incomeSource.source,\n              secondary: `Estimated Income: $${incomeSource.avgMonthlyIncome.toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), Object.keys(transactionsByMonth).map((month, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: transactionsByMonth[month].map(transaction => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: transaction.name,\n              secondary: `Amount: $${transaction.amount} • ${transaction.date}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)\n          }, transaction.transaction_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaidIntegration, \"+hH7PtKbHh/ZZjYoj52mGd8X9zY=\", false, function () {\n  return [usePlaidLink];\n});\n_c = PlaidIntegration;\nexport default PlaidIntegration;\nvar _c;\n$RefreshReg$(_c, \"PlaidIntegration\");","map":{"version":3,"names":["React","useState","useEffect","usePlaidLink","axios","Button","CircularProgress","Container","Card","CardContent","Typography","List","ListItem","ListItemText","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","moment","jsxDEV","_jsxDEV","PlaidIntegration","_s","linkToken","setLinkToken","accessToken","setAccessToken","accounts","setAccounts","transactions","setTransactions","income","setIncome","loading","setLoading","fetchLinkToken","response","post","data","link_token","error","console","open","ready","token","onSuccess","publicToken","public_token","access_token","fetchBankData","accountResponse","transactionResponse","incomeResponse","transactionsByMonth","reduce","acc","transaction","month","date","format","push","maxWidth","style","textAlign","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","marginBottom","length","padding","map","account","primary","name","secondary","balances","current","account_id","backgroundColor","fontWeight","incomeSource","index","source","avgMonthlyIncome","toFixed","Object","keys","expandIcon","amount","transaction_id","_c","$RefreshReg$"],"sources":["C:/Users/Pyron/CSE/Hackathon_2025_Finance/Test/frontend/src/components/PlaidIntegration.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { usePlaidLink } from \"react-plaid-link\";\r\nimport axios from \"axios\";\r\nimport { \r\n  Button, CircularProgress, Container, Card, CardContent, \r\n  Typography, List, ListItem, ListItemText, Accordion, \r\n  AccordionSummary, AccordionDetails, ExpandMoreIcon \r\n} from \"@mui/material\";\r\nimport moment from \"moment\";\r\n\r\nconst PlaidIntegration = () => {\r\n  const [linkToken, setLinkToken] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [income, setIncome] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch link token from backend\r\n  useEffect(() => {\r\n    const fetchLinkToken = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\r\n        setLinkToken(response.data.link_token);\r\n      } catch (error) {\r\n        console.error(\"Error creating link token:\", error);\r\n      }\r\n    };\r\n    fetchLinkToken();\r\n  }, []);\r\n\r\n  // Initialize Plaid Link\r\n  const { open, ready } = usePlaidLink({\r\n    token: linkToken,\r\n    onSuccess: async (publicToken) => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", { public_token: publicToken });\r\n        setAccessToken(response.data.access_token);\r\n        fetchBankData(response.data.access_token);\r\n      } catch (error) {\r\n        console.error(\"Error exchanging token:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Fetch accounts, transactions, and income data\r\n  const fetchBankData = async (token) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch Accounts\r\n      const accountResponse = await axios.post(\"http://localhost:5000/api/accounts\", { access_token: token });\r\n      setAccounts(accountResponse.data.accounts || []);\r\n\r\n      // Fetch Transactions\r\n      const transactionResponse = await axios.post(\"http://localhost:5000/api/transactions\", { access_token: token });\r\n      setTransactions(transactionResponse.data.transactions || []);\r\n\r\n      // Fetch Income\r\n      const incomeResponse = await axios.post(\"http://localhost:5000/api/income\", { access_token: token });\r\n      setIncome(incomeResponse.data.income || []);\r\n\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching financial data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Group transactions by month\r\n  const transactionsByMonth = transactions.reduce((acc, transaction) => {\r\n    const month = moment(transaction.date).format(\"MMMM YYYY\"); // Example: \"March 2025\"\r\n    if (!acc[month]) acc[month] = [];\r\n    acc[month].push(transaction);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Finance Advisor\r\n      </Typography>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={open} disabled={!ready || !linkToken} style={{ marginBottom: \"20px\" }}>\r\n        Connect Bank Account\r\n      </Button>\r\n      <br/>\r\n\r\n      {loading && <CircularProgress />}\r\n\r\n      {/* Display Accounts */}\r\n      {accounts.length > 0 && (\r\n        <Card style={{ marginTop: \"20px\", padding: \"20px\" }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\">Bank Accounts</Typography>\r\n            <List>\r\n              {accounts.map((account) => (\r\n                <ListItem key={account.account_id}>\r\n                  <ListItemText primary={account.name} secondary={`Balance: $${account.balances.current}`} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Display Income Data */}\r\n      {income.length > 0 && (\r\n        <Card style={{ marginTop: \"20px\", padding: \"20px\", backgroundColor: \"#e8f5e9\" }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" style={{ fontWeight: \"bold\", color: \"#2E7D32\" }}>\r\n              Estimated Monthly Income\r\n            </Typography>\r\n            <List>\r\n              {income.map((incomeSource, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={incomeSource.source}\r\n                    secondary={`Estimated Income: $${incomeSource.avgMonthlyIncome.toFixed(2)}`}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Display Transactions Sorted by Month */}\r\n      {Object.keys(transactionsByMonth).map((month, index) => (\r\n        <Accordion key={index} style={{ marginTop: \"10px\" }}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h6\">{month}</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n              {transactionsByMonth[month].map((transaction) => (\r\n                <ListItem key={transaction.transaction_id}>\r\n                  <ListItemText \r\n                    primary={transaction.name} \r\n                    secondary={`Amount: $${transaction.amount} • ${transaction.date}`} \r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaidIntegration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}