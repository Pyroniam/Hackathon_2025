{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pyron\\\\CSE\\\\Hackathon_2025_Finance\\\\Test\\\\frontend\\\\src\\\\components\\\\PlaidIntegration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport axios from \"axios\";\nimport { Button, CircularProgress, Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Accordion, AccordionSummary, AccordionDetails, Card, CardContent, List, ListItem, ListItemText } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaidIntegration = () => {\n  _s();\n  const [linkToken, setLinkToken] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [income, setIncome] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch link token from backend\n  useEffect(() => {\n    const fetchLinkToken = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\n        setLinkToken(response.data.link_token);\n      } catch (error) {\n        console.error(\"Error creating link token:\", error);\n      }\n    };\n    fetchLinkToken();\n  }, []);\n\n  // Initialize Plaid Link\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: async publicToken => {\n      try {\n        setLoading(true);\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", {\n          public_token: publicToken\n        });\n        setAccessToken(response.data.access_token);\n        fetchBankData(response.data.access_token);\n      } catch (error) {\n        console.error(\"Error exchanging token:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n\n  // Fetch accounts, transactions, and income data\n  const fetchBankData = async token => {\n    try {\n      setLoading(true);\n\n      // Fetch Accounts\n      const accountResponse = await axios.post(\"http://localhost:5000/api/accounts\", {\n        access_token: token\n      });\n      setAccounts(accountResponse.data.accounts || []);\n\n      // Fetch Transactions\n      const transactionResponse = await axios.post(\"http://localhost:5000/api/transactions\", {\n        access_token: token\n      });\n      setTransactions(transactionResponse.data.transactions || []);\n\n      // Fetch Income\n      const incomeResponse = await axios.post(\"http://localhost:5000/api/income\", {\n        access_token: token\n      });\n      setIncome(incomeResponse.data.income || []);\n    } catch (error) {\n      console.error(\"❌ Error fetching financial data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to group transactions by month and calculate total spending\n  const groupTransactionsByMonth = () => {\n    const grouped = {};\n    transactions.forEach(transaction => {\n      const date = new Date(transaction.date);\n      const monthYear = date.toLocaleString(\"default\", {\n        month: \"short\",\n        year: \"numeric\"\n      }); // Example: \"Jan 2024\"\n\n      if (!grouped[monthYear]) {\n        grouped[monthYear] = {\n          transactions: [],\n          total: 0\n        };\n      }\n      grouped[monthYear].transactions.push(transaction);\n      grouped[monthYear].total += transaction.amount;\n    });\n    return grouped;\n  };\n  const groupedTransactions = groupTransactionsByMonth();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Finance Advisor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: open,\n      disabled: !ready || !linkToken,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Connect Bank Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, this), income.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"20px\",\n        padding: \"20px\",\n        backgroundColor: \"#e8f5e9\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            fontWeight: \"bold\",\n            color: \"#2E7D32\"\n          },\n          children: \"Estimated Monthly Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: income.map((incomeSource, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: incomeSource.source,\n              secondary: `Estimated Income: $${incomeSource.avgMonthlyIncome.toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), Object.entries(groupedTransactions).map(([month, data]) => /*#__PURE__*/_jsxDEV(Accordion, {\n      style: {\n        marginTop: \"10px\",\n        backgroundColor: \"#2e2e2e\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n          style: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            fontWeight: \"bold\",\n            width: \"100%\"\n          },\n          children: [month, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              float: \"right\"\n            },\n            children: [\"$\", data.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\",\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Bank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\",\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\",\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\",\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: data.transactions.map(transaction => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: transaction.bank_name || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: transaction.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: [\"$\", transaction.amount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: new Date(transaction.date).getDate()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)]\n              }, transaction.transaction_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaidIntegration, \"+hH7PtKbHh/ZZjYoj52mGd8X9zY=\", false, function () {\n  return [usePlaidLink];\n});\n_c = PlaidIntegration;\nexport default PlaidIntegration;\nvar _c;\n$RefreshReg$(_c, \"PlaidIntegration\");","map":{"version":3,"names":["React","useState","useEffect","usePlaidLink","axios","Button","CircularProgress","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Accordion","AccordionSummary","AccordionDetails","Card","CardContent","List","ListItem","ListItemText","ExpandMoreIcon","jsxDEV","_jsxDEV","PlaidIntegration","_s","linkToken","setLinkToken","accessToken","setAccessToken","accounts","setAccounts","transactions","setTransactions","income","setIncome","loading","setLoading","fetchLinkToken","response","post","data","link_token","error","console","open","ready","token","onSuccess","publicToken","public_token","access_token","fetchBankData","accountResponse","transactionResponse","incomeResponse","groupTransactionsByMonth","grouped","forEach","transaction","date","Date","monthYear","toLocaleString","month","year","total","push","amount","groupedTransactions","maxWidth","style","textAlign","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","marginBottom","length","padding","backgroundColor","fontWeight","map","incomeSource","index","primary","source","secondary","avgMonthlyIncome","toFixed","Object","entries","expandIcon","width","float","bank_name","name","getDate","transaction_id","_c","$RefreshReg$"],"sources":["C:/Users/Pyron/CSE/Hackathon_2025_Finance/Test/frontend/src/components/PlaidIntegration.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { usePlaidLink } from \"react-plaid-link\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\nconst PlaidIntegration = () => {\r\n  const [linkToken, setLinkToken] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [income, setIncome] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch link token from backend\r\n  useEffect(() => {\r\n    const fetchLinkToken = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\r\n        setLinkToken(response.data.link_token);\r\n      } catch (error) {\r\n        console.error(\"Error creating link token:\", error);\r\n      }\r\n    };\r\n    fetchLinkToken();\r\n  }, []);\r\n\r\n  // Initialize Plaid Link\r\n  const { open, ready } = usePlaidLink({\r\n    token: linkToken,\r\n    onSuccess: async (publicToken) => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", { public_token: publicToken });\r\n        setAccessToken(response.data.access_token);\r\n        fetchBankData(response.data.access_token);\r\n      } catch (error) {\r\n        console.error(\"Error exchanging token:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Fetch accounts, transactions, and income data\r\n  const fetchBankData = async (token) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch Accounts\r\n      const accountResponse = await axios.post(\"http://localhost:5000/api/accounts\", { access_token: token });\r\n      setAccounts(accountResponse.data.accounts || []);\r\n\r\n      // Fetch Transactions\r\n      const transactionResponse = await axios.post(\"http://localhost:5000/api/transactions\", { access_token: token });\r\n      setTransactions(transactionResponse.data.transactions || []);\r\n\r\n      // Fetch Income\r\n      const incomeResponse = await axios.post(\"http://localhost:5000/api/income\", { access_token: token });\r\n      setIncome(incomeResponse.data.income || []);\r\n\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching financial data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to group transactions by month and calculate total spending\r\n  const groupTransactionsByMonth = () => {\r\n    const grouped = {};\r\n\r\n    transactions.forEach((transaction) => {\r\n      const date = new Date(transaction.date);\r\n      const monthYear = date.toLocaleString(\"default\", { month: \"short\", year: \"numeric\" }); // Example: \"Jan 2024\"\r\n\r\n      if (!grouped[monthYear]) {\r\n        grouped[monthYear] = { transactions: [], total: 0 };\r\n      }\r\n\r\n      grouped[monthYear].transactions.push(transaction);\r\n      grouped[monthYear].total += transaction.amount;\r\n    });\r\n\r\n    return grouped;\r\n  };\r\n\r\n  const groupedTransactions = groupTransactionsByMonth();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Finance Advisor\r\n      </Typography>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={open}\r\n        disabled={!ready || !linkToken}\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        Connect Bank Account\r\n      </Button>\r\n\r\n      {loading && <CircularProgress />}\r\n\r\n      {/* Display Income Data */}\r\n      {income.length > 0 && (\r\n        <Card style={{ marginTop: \"20px\", padding: \"20px\", backgroundColor: \"#e8f5e9\" }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" style={{ fontWeight: \"bold\", color: \"#2E7D32\" }}>\r\n              Estimated Monthly Income\r\n            </Typography>\r\n            <List>\r\n              {income.map((incomeSource, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={incomeSource.source}\r\n                    secondary={`Estimated Income: $${incomeSource.avgMonthlyIncome.toFixed(2)}`}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Display grouped transactions */}\r\n      {Object.entries(groupedTransactions).map(([month, data]) => (\r\n        <Accordion key={month} style={{ marginTop: \"10px\", backgroundColor: \"#2e2e2e\", color: \"white\" }}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon style={{ color: \"white\" }} />}>\r\n            <Typography variant=\"h6\" style={{ fontWeight: \"bold\", width: \"100%\" }}>\r\n              {month} <span style={{ float: \"right\" }}>${data.total.toFixed(2)}</span>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ color: \"white\", fontWeight: \"bold\" }}>Bank</TableCell>\r\n                    <TableCell style={{ color: \"white\", fontWeight: \"bold\" }}>Name</TableCell>\r\n                    <TableCell style={{ color: \"white\", fontWeight: \"bold\" }}>Price</TableCell>\r\n                    <TableCell style={{ color: \"white\", fontWeight: \"bold\" }}>Date</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.transactions.map((transaction) => (\r\n                    <TableRow key={transaction.transaction_id}>\r\n                      <TableCell style={{ color: \"white\" }}>{transaction.bank_name || \"N/A\"}</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>{transaction.name}</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>${transaction.amount.toFixed(2)}</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>{new Date(transaction.date).getDate()}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaidIntegration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}