{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pyron\\\\CSE\\\\Hackathon_2025_Finance\\\\Test\\\\frontend\\\\src\\\\components\\\\PlaidIntegration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaidIntegration = () => {\n  _s();\n  const [linkToken, setLinkToken] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [bankData, setBankData] = useState(null); // Stores fetched bank details\n\n  // Fetch link token on component mount\n  useEffect(() => {\n    const fetchLinkToken = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\n        setLinkToken(response.data.link_token);\n      } catch (error) {\n        console.error(\"Error creating link token:\", error);\n      }\n    };\n    fetchLinkToken();\n  }, []);\n\n  // Initialize Plaid Link when linkToken is available\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: async publicToken => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", {\n          public_token: publicToken\n        });\n        setAccessToken(response.data.access_token);\n      } catch (error) {\n        console.error(\"Error exchanging token:\", error);\n      }\n    }\n  });\n\n  // Fetch bank data when access token is available\n  useEffect(() => {\n    if (!accessToken) return;\n    const fetchBankData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/accounts?access_token=${accessToken}`);\n        setBankData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching bank data:\", error);\n      }\n    };\n    fetchBankData();\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Finance Advisor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: open,\n      disabled: !ready || !linkToken,\n      children: \"Connect Bank Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), bankData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bank Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), bankData.accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [account.name, \" (\", account.subtype, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: $\", account.balances.current]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, account.account_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), bankData.transactions.length > 0 ? bankData.transactions.map(txn => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: txn.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: $\", txn.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", txn.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, txn.transaction_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recent transactions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaidIntegration, \"lV4DMd0Veal+ix0Ou4oJgGeRhUs=\", false, function () {\n  return [usePlaidLink];\n});\n_c = PlaidIntegration;\nexport default PlaidIntegration;\nvar _c;\n$RefreshReg$(_c, \"PlaidIntegration\");","map":{"version":3,"names":["React","useState","useEffect","usePlaidLink","axios","jsxDEV","_jsxDEV","PlaidIntegration","_s","linkToken","setLinkToken","accessToken","setAccessToken","bankData","setBankData","fetchLinkToken","response","post","data","link_token","error","console","open","ready","token","onSuccess","publicToken","public_token","access_token","fetchBankData","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","accounts","map","account","style","border","padding","marginBottom","name","subtype","balances","current","account_id","transactions","length","txn","amount","date","transaction_id","_c","$RefreshReg$"],"sources":["C:/Users/Pyron/CSE/Hackathon_2025_Finance/Test/frontend/src/components/PlaidIntegration.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { usePlaidLink } from \"react-plaid-link\";\r\nimport axios from \"axios\";\r\n\r\nconst PlaidIntegration = () => {\r\n  const [linkToken, setLinkToken] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [bankData, setBankData] = useState(null); // Stores fetched bank details\r\n\r\n  // Fetch link token on component mount\r\n  useEffect(() => {\r\n    const fetchLinkToken = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/create_link_token\");\r\n        setLinkToken(response.data.link_token);\r\n      } catch (error) {\r\n        console.error(\"Error creating link token:\", error);\r\n      }\r\n    };\r\n    fetchLinkToken();\r\n  }, []);\r\n\r\n  // Initialize Plaid Link when linkToken is available\r\n  const { open, ready } = usePlaidLink({\r\n    token: linkToken,\r\n    onSuccess: async (publicToken) => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/exchange_public_token\", {\r\n          public_token: publicToken,\r\n        });\r\n        setAccessToken(response.data.access_token);\r\n      } catch (error) {\r\n        console.error(\"Error exchanging token:\", error);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Fetch bank data when access token is available\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    const fetchBankData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/accounts?access_token=${accessToken}`);\r\n        setBankData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching bank data:\", error);\r\n      }\r\n    };\r\n    fetchBankData();\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Finance Advisor</h1>\r\n      <button onClick={open} disabled={!ready || !linkToken}>\r\n        Connect Bank Account\r\n      </button>\r\n\r\n      {bankData && (\r\n        <div>\r\n          <h2>Bank Accounts</h2>\r\n          {bankData.accounts.map((account) => (\r\n            <div key={account.account_id} style={{ border: \"1px solid #ccc\", padding: \"10px\", marginBottom: \"10px\" }}>\r\n              <h3>{account.name} ({account.subtype})</h3>\r\n              <p>Balance: ${account.balances.current}</p>\r\n            </div>\r\n          ))}\r\n\r\n          <h2>Recent Transactions</h2>\r\n          {bankData.transactions.length > 0 ? (\r\n            bankData.transactions.map((txn) => (\r\n              <div key={txn.transaction_id} style={{ border: \"1px solid #ccc\", padding: \"10px\", marginBottom: \"10px\" }}>\r\n                <p><strong>{txn.name}</strong></p>\r\n                <p>Amount: ${txn.amount}</p>\r\n                <p>Date: {txn.date}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No recent transactions found.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaidIntegration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}